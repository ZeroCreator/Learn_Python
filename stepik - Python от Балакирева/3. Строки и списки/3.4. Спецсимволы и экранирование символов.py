# Спецсимволы и экранирование символов - \ - Маркер начала спецсимвола.
# Символ перевода строки - \n (один символ)
t = "panda needs\npython"
print(t)
# Символ обратного слеша - \\
# Символ апострофа - \'
# Символ двойной кавычки - \"
# Эмуляция клавиши BackSpace - \b
# Перевод формата - \f
# Возврат каретки - \r
# Горизонтальная табуляция (4 пробела) - \t
# Вертикальная табуляция - \v

# Экранирование
print("Экранирование")
s = "panda \needs\ python"
print(s)

t = "panda \\needs\\ python"
print(t)

path = "D:Python\Projects\stepik\text.py"
print(path)

path = "D:Python\\Projects\\stepik\\text.py"
print(path)

s = "Марка вина \"Ягодка\""
print(s)

# "Сырые" - row-строки. Игнорируется спецпоследовательность.
print("Сырые - row-строки. Игнорируется спецпоследовательность.")
print(path)
path = r"D:Python\\Projects\\stepik\\text.py"
print(path)
path = r"D:Python\Projects\stepik\text.py"
print(path)

# Подвиг 3. Вводится два слова в одну строку через пробел. Поставьте между этими словами символ обратного
# слеша (вместо пробела). Результирующую строку отобразите на экране.
print("\\".join(input().split()))

# Подвиг 4. Вводится строка со словами, разделенными пробелом. Необходимо первый пробел заменить на одинарную кавычку,
# а все остальные - на двойные. Результирующую строку отобразить на экране.
print(input().replace(" ", "\"").replace("\"", "\'", 1))

#
s1 = input()
print(s1.replace(' ', '"').replace('"', "'", 1))

#
print('"'.join(input().split()).replace('"', "'", 1))

# Подвиг 6. Вводится слово. Необходимо сформировать новую строку, где введенное слово будет заключено в двойные кавычки.
# Результат выведите на экран.
print("\""+input()+"\"")

#
print(f'"{input()}"')

#
print('"' + input() + '"')

#
s = input()
print(s.rjust(len(s) + 1, "\"").ljust(len(s) + 2, "\""))

#
s = input().strip()
s = s.join(("\"", "\""))
print(s)

