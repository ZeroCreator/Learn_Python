# Функция map.
b = map(int, ["1", "2", "3", "4", "5", "7"])

# print(next(b))
# print(next(b))

for x in b:
    print(x, end=" ")

b = map(int, ["1", "2", "3", "4", "5", "7"])
a = list(b)
print(a)

b = (int(x) for x in ["1", "2", "3", "4", "5", "7"])
a = list(b)
print(a)

b = map(int, ["1", "2", "3", "4", "5", "7"])
a = sum(b)
print(a)

b = map(int, ["1", "2", "3", "4", "5", "7"])
a = max(b)
print(a)

cities = ["Москва", "Астрахань", "Самара", "Уфа", "Смоленск", "Тверь"]
b = map(len, cities)
print(list(b))

cities = ["Москва", "Астрахань", "Самара", "Уфа", "Смоленск", "Тверь"]
b = map(str.upper, cities)

print(list(b))

def symbols(s):
    return list(s.lower())

b = map(symbols, cities)
print(list(b))

cities = ["Москва", "Астрахань", "Самара", "Уфа", "Смоленск", "Тверь"]
b = map(lambda s: list(s.lower()), cities)
print(list(b))

cities = ["Москва", "Астрахань", "Самара", "Уфа", "Смоленск", "Тверь"]
b = map(lambda s: s[::-1], cities)
print(list(b))

#
print("Tasks")
# На вход поступает список из вещественных чисел, записанных в строку через пробел. С помощью функции map преобразовать
# числа в строке в их вещественное представление и отобразить первые три числа. (Полагается, что минимум три вещественных
# числа имеются). Реализовать извлечение чисел через функцию next. Результат отобразить в строку через пробел.
m = map(float, input().split())
print(*(next(m) for _ in range(3)))

#
numbers = list(map(float, input().split()))
print(*numbers[:3])

#
print(*list(map(float, input().split()))[:3])


# На вход поступает строка из целых чисел, записанных через пробел. С помощью функции map преобразовать эту строку в
# список целых чисел, взятых по модулю. Сформируйте именно список lst из таких чисел. Отобразите его на экране в виде
# набора чисел, идущих через пробел.
print(*list(map(abs, map(int, input().split()))))

#
lst = list(map(lambda x: abs(int(x)), input().split()))
print(*lst)

# Подвиг 3. Вводится таблица целых чисел. Используя функцию map и генератор списков, преобразуйте список строк lst_in (см. листинг)
# в двумерный список с именем lst2D, содержащий целые числа.
# Выводить на экран ничего не нужно, только сформировать список lst2D на основе введенных данных.
import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

lst2D = list(list(map(int, i.split())) for i in lst_in)

#
lst2D = [list(map(int, i.split())) for i in lst_in]

#
lst2D = [*map(lambda x: [*map(int, x.split())], lst_in)]


# На вход программы поступает строка в формате:
# ключ_1=значение_1 ключ_2=значение_2 ... ключ_N=значение_N
# Необходимо с помощью функции map преобразовать ее в кортеж tp вида:
# tp = (('ключ_1', 'значение_1'), ('ключ_2', 'значение_2'), ..., ('ключ_N', 'значение_N'))
# Sample Input: house=дом car=машина men=человек tree=дерево
s = input()
s_lst = s.split()
tp = tuple(map(tuple, (i.split("=") for i in s_lst)))
print(tp)

#
s = input()
s_lst = s.split()
tp = tuple(map(lambda x: tuple(x.split('=')), s_lst))


# (Для учебных целей). Вводится строка. Необходимо в ней заменить кириллические символы на соответствующие латинские
# обозначения (без учета регистра букв), а все остальные символы - на символ дефиса (-). Для этого в программе определен
# словарь (см. листинг). Используя его, запишите функцию map, которая бы выдавала преобразованные фрагменты для входной
# строки. На основе этой функции сформируйте строку, состоящую из преобразованных фрагментов (фрагменты в строке должны
# идти друг за другом без пробелов). Отобразите результат на экране.
t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
     'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
     'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
     'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}


# Вводятся названия городов в одну строчку через пробел. Необходимо определить функцию map, которая бы возвращала
# названия городов только длиной более 5 символов. Вместо остальных названий - строку с дефисом ("-"). Сформировать
# список из полученных значений и отобразить его на экране в одну строчку через пробел.
ls = input().split()
print(*map(lambda x: x if len(x) > 5 else "-", ls))

#
ls = input().split()
print(*list(map(lambda x: x if len(x) > 5 else "-", ls)))

#
cities = map(lambda x: ('-', x)[len(x) > 5], input().split())
print(*cities)

#
print(*map(lambda x: x if len(x) > 5 else '-', input().split()))