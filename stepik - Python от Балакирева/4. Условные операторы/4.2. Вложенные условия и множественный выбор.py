# Вложенные условия и множественный выбор
x = int(input())

if x%2 == 0:
    if 0<=x<=9:
        print(f"{x} - цифра")
    else:
        print(f"{x} - число")
else:
    print(f"{x} - нечетное число")


print("Большее из трех чисел")
a = int(input("a: "))
b = int(input("b: "))
c = int(input("c: "))

if a > b:
    if a > c:
        print("a -> max")
    else:
        print("c -> max")
else:
    if b > c:
        print("b -> max")
    else:
        print("c -> max")


item = int(input())

if item == 1:
    print("Выбран курс по Python")
elif item == 2:
    print("Выбран курс по C++")
elif item == 3:
    print("Выбран курс по Java")
elif item == 4:
    print("Выбран курс по JavaScript")
else:
    print("Неверный пункт")


x = int(input())

if x <0:
    print("x должно быть положительным")
elif 0 <= x <= 9:
    print("x - цифра")
elif 10 <= x <= 99:
    print("x - двузначное число")
elif 100 <= x <= 999:
    print("x - трехзначное число")


# Подвиг 4. Вводится порядковый номер дня недели (1, 2, ..., 7). Вывести на экран его название
# (понедельник, вторник, среда, четверг, пятница, суббота, воскресенье).
# Программу реализовать с использованием операторов if-elif.
a = ["понедельник", "вторник", "среда", "четверг", "пятница", "суббота", "воскресенье"]
x = int(input())
print(a[x-1])

#
d1 = int(input())
print(['понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота', 'воскресенье'][d1-1])

#
day = int(input())
week =['понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота', 'воскресенье']
if 1 <= day <= 7:
    print(week[day - 1])


# Подвиг 5. Вводится порядковый номер месяца (1, 2, ..., 12). Вывести на экран количество дней в этом месяце.
# Принять, что год не является високосным. Реализовать через условный оператор, в котором следует использовать не
# более трех ветвей (блоков).
# P.S. Число дней в месяцах не високосного года, начиная с января: 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31
x = int(input())
if x in [1, 3, 5, 7, 8, 10, 12]:
    print(31)
elif x in [4, 6, 9, 11]:
    print(30)
else:
    print(28)

#
year = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
num = int(input())
if 1 <= num <= 12:
    print(year[num - 1])
else:
    print('Введите число от 1 до 12')

#
print([0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][int(input())])

#
x = input()
print(((31, 30)[x in ('4', '6', '9', '11')], 28)[x == '2'])


# Подвиг 7. Вводится целое число k (1 <= k <= 365). Определить, каким днем недели
# (понедельник, вторник, среда, четверг, пятница, суббота или воскресенье) является k-й день не високосного года,
# в котором 1 января является понедельником.
a = ["понедельник", "вторник", "среда", "четверг", "пятница", "суббота", "воскресенье"]
k = int(input()) % 7
print(a[k-1])

#
n = int(input())
lst = ['понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота', 'воскресенье',]
print(lst[n % 7 - 1])

#
n = int(input())
print(["воскресенье", "понедельник", "вторник","среда", "четверг", "пятница", "суббота"][n % 7])

#
days = ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота']
k = int(input())
print(days[k % 7])

#
print(('понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота', 'воскресенье')[int(input()) % 7 -1])


# Подвиг 6. Дата некоторого дня характеризуется двумя натуральными числами: m (порядковый номер месяца) и n (число).
# По введенным m и n (в одну строку через пробел) определить:
# а) дату предыдущего дня (принять, что m и n не характеризуют 1 января);
# б) дату следующего дня (принять, что m и n не характеризуют 31 декабря).
# В задаче принять, что год не является високосным. Вывести предыдущую дату и следующую дату
# (в формате: mm.dd, где m - число месяца; d - номер дня) в одну строчку через пробел.
# P.S. Число дней в месяцах не високосного года, начиная с января: 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31

# пока не верный код
days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
b, a = map(int, input().split())
if a == 1:
    pday = days[b-2]
    pmh = b - 1
    fday = 2
    fmh = b
elif a == days[b-1]:
    pday = a - 1
    pmh = b
    fday = 1
    fmh = b + 1
else:
    pday = a - 1
    pmh = b
    fday = a + 1
    fmh = b
print(f"{str(pmh).rjust(2, '0')}.{str(pday).rjust(2, '0')} {str(fmh).rjust(2, '0')}.{str(fday).rjust(2, '0')}")

#
m, n = map(int, input().split())
lst = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]

if n == 1:
    print(f'{m - 1:02}.{lst[m - 2]} {m:02}.{n + 1:02}')
elif n == lst[m - 1]:
    print(f'{m:02}.{n - 1:02} {m + 1:02}.01')
else:
    print(f'{m:02}.{n - 1:02} {m:02}.{n + 1:02}')


#
l = (31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
m, d = map(int, input().split())
print((f'{m:02d}.{d - 1:02d}', f'{m - 1:02d}.{l[m - 2]:02d}')[d == 1], (f'{m:02d}.{d + 1:02d}', f'{m + 1:02d}.{1:02d}')[l[m - 1] < d + 1])

