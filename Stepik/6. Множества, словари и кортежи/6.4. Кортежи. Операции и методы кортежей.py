# Кортежи (tuple). Операции и методы кортежей.
# Кортеж - неизменяемая (в отличие от списка) последовательность, обычно используемая для хранения разнотипных объектов.
# Кортеж может содержать изменяемые объекты, как следствие, через их изменение - меняется сам.
# 1. Создание кортежа:
print('Создание кортежа:')
# 1.1
a = (1, 2, 3, 4, 5)
print(a, type(a))

# 1.2
a = 1, 2, 3, 4, 5
print(a, type(a))
a = 1, # Запятая превращает переменную в кортеж
print(a, type(a))

a = 1
print(a, type(a))

a = (1)
print(a, type(a))

# 1.3 С помощью функции tuple():
b = tuple()
print(b, type(b))

# Передать итерабельныю последовательность в качестве аргумента функции:
b = tuple(range(5))
print(b, type(b))

# Список:
b = tuple([1, 2, 3])
print(b, type(b))

# Кортеж:
b = tuple((1, 2, 3))
print(b, type(b))

# 1.4 Создание пустых кортежей:
c = ()
b = tuple()

# 2. Операции над кортежами:
print('Операции над кортежами:')
print('Находить длину - функция len():')
a = (1, 2, 3, 4, 5)
print(len(a))

print('Опратор in:')
print(2 in a, 7 in a, 6 not in a)

print('Сцепление кортежей:')
x = (1, 2, 3, 4, 5)
y = tuple(range(5))
print(x + y)
print(y + x)

print('Дублирование кортежей:')
print(x*2)

print('Функции min() и max() в кортежах из чисел:')
a = 1, 2, 3, 54, 32, 5
print(min(a), max(a))

print('Функция sum() в кортежах из чисел:')
print(sum(a))

print('Обращение к подстрокие:')
a = 1, 'hello', 3, 54, False, 5
print(a[1])
print(a[4])

# Методы кортежей:
print('Методы кортежей:')
print('.index()')
print(a.index(1))
print(a.index(3))

print('.count()')
print(a.count(54))
print(a.count(8))

# Список внутри кортежа (можно изменять):
a = 1, 'hello', 3, [10, 20, 30], False, 5
print(a[3])
a[3].append(100)
print(a[3])
print(a)

# Использование кортежей:
# 1. Если нужно гарантировать неизменяемость объектов.
a = [1, 'hello', 3, [10, 20, 30], False, 5]
b = a
print(a)
print(b)
b[2] = 100
print(a)
print(b)

'''
a = 1, 'hello', 3, [10, 20, 30], False, 5
b = a
print(a)
print(b)
b[2] = 100 # Будет ошибка
print(a)
print(b)
'''

# 2. Кортежи занимают меньше места в памяти и скорость их обработки выше.
x = [1, 'hello', 3, [10, 20, 30], False, 5]
y = tuple([1, 'hello', 3, [10, 20, 30], False, 5])
print(x.__sizeof__())
print(y.__sizeof__())

# 3. Кортежи могут быть использованы в качестве ключей словаря, так как ключами словаря могут быть только неизменяемые объекты..
a = (1, 2, 3)
b = {}
b[a] = 'hello'
print(b)

# 4. Преобразование кортежа к списку:
print('Преобразование кортежа к списку:')
a = (1, 2, 3)
print(a, type(a))
a = list(a)
print(a, type(a))
a.append(100)
a.reverse()
a = tuple(a)
print(a)

# 5. Обход последовательности кортежа при помощи цикла for:
a = (1, 2, 3, 100, 32, 'hello')
for i in a:
    print(i) # Обход кортежа по значению:

a = (1, 2, 3, 100, 32, 'hello')
for i in range(len(a)):
    print(a[i]) # Обход кортежа по значению индекса: