# Цикл for. Обход элементов функции range.
# Цикл for - цикл с известным количетвом повторений.
# Формат цикла for
# for <переменная> in <объект>:
#    <тело цикла>
for i in range(4):
    print(i)                # Переменная i - это переменная цикла.

for i in range(4):
    print(i)
    i = 'hello'
    print(i)


for i in range(4):
    print('inside', i)
print('outside', i)

# Области применения:
print('1. Обход заданной последовательности:')
for i in range(100, 1000):
    if i % 2 == 0 and i % 7 == 0:               # Условие внутри цикла
        print(i)

for i in range(1, 11):
    print(i, i**2)

#
print('Сумма всех двузначных чисел:')
s = 0
for i in range(10, 100):
    s = s + i
print(s)

#
print('Факториал числа n:')
# 3! = 1*2*3
pr = 1
for i in range(1, 4):
    pr = pr*i
print(pr)

n = int(input())
pr = 1
for i in range(1, n+1):
    pr = pr * i
print(pr)

#
print('2.Повторение заданного действия n-количество раз:')
for i in range(4):
    print('hello')

n = int(input())
for i in range(n):
    print('hello')

#
print('n-раз вывести случайное число от 1 до 100:')
from random import randint

for i in range(5):
    a = randint(1, 100)
    print(a, end=' ')

#
print('Найти сумму случайных чисел:')
from random import randint

s = 0
n = int(input())
for i in range(n):
    a = randint(1, 100)
    s += a
    print(a, end=' ')
print()
print(s)

# Елочка
print('Елочка')
for i in range(1, 11):
    print('*'*i)

# Степени двойки
print('Степени двойки')
for i in range(1, 11):
    print(2**i)

# Вывести сумму введенных цифр:
print('Вывести сумму введенных цифр:')
n = int(input())
s = 0
for i in range(n):
    a = int(input())
    s += a
    print('current s:', s)          # Сумма по итерациям
print('total', s)                   # Итоговая сумма
print('sred arif =', s/n)           # Среднее арифметическое

# Напишите программу, которая считывает два натуральных числа a и b (гарантируется, что a<b), после чего для всех
# чисел от a до b включительно выводит:
# “Fizz”, если это число делится на 3;
# “Buzz”, если это число делится на 5;
# “FizzBuzz”, если выполнены оба предыдущих условия;
# само это число в остальных случаях.
a = int(input())
b = int(input())
for i in range(a, b+1):
    if i % 3 == 0 and i % 5 == 0:
        print('FizzBuzz')
    elif i % 3 == 0:
        print('Fizz')
    elif i % 5 == 0:
        print('Buzz')
    else:
        print(i)

#
for n in range(int(input()), int(input()) + 1):
    print('Fizz' * (not n % 3) + 'Buzz' * (not n % 5) or n)

#
for n in range(int(input()), int(input()) + 1):
    if not n % 3 and not n % 5:
        print('FizzBuzz')
    elif not n % 3:
        print('Fizz')
    elif not n % 5:
        print('Buzz')
    else:
        print(n)

# На вход программе подается два натуральных числа a и b (гарантируется, что a<b), после чего для каждого целого числа
# на интервале от a до b включительно необходимо вывести фразу следующего вида:
# «Число {число}; его квадрат = {квадрат}; его куб = {куб}»
# Кавычки выводить не нужно и пользуйтесь f-строкой.
# Формат входных данных:
# На вход программе подается два натуральных числа a и b, каждое на отдельной строке.
# Формат выходных данных:
# Программа должна вывести текст в соответствии с условием задачи.
a = int(input())
b = int(input())
for i in range(a, b + 1):
    print(f'Число {i}; его квадрат = {i**2}; его куб = {i**3}')

#
[print(f'Число {i}; его квадрат = {i**2}; его куб = {i**3}')
for i in range(int(input()), int(input()) + 1)]

#
for i in range(int(input()), int(input()) + 1): print(f'Число {i}; его квадрат = {i**2}; его куб = {i**3}')

#
for i in range(int(input()), int(input()) + 1):
    print(f'Число {i}; его квадрат = {i ** 2}; его куб = {i ** 3}')

# Найдите, в каких строках из введённых и в каком месте упоминается "рок", причем регистр букв не важен.
# Вместо явного цикла прохода по строке в цикле используйте подходящий метод строки.
# Формат ввода:
# На первой строке вводится натуральное число N — количество строк.
# Далее следуют N строк.
# Формат вывода:
# Для каждой строки, в которой есть сочетание символов «рок», нужно вывести (в порядке появления таких строк)
# номер этой строки (нумерация начинается с единицы) и номер символа, с которого начинается первое вхождение
# этой подстроки (нумерация символов также с единицы).
n = int(input())                        #вводим  число сколько раз выводить слово
count = 0                               #счетчик

for i in range(1, n+1):                 #переменная i будет равна от 1 до n+1
    a = input().lower().find("рок")     #выводим n переменных
    count +=1                           #тикаем
    if a != -1:
        print(count, a+1)

#
n = int(input())
for i in range(n):
    s = input().lower()
    if 'рок' in s:
        print(i+1, s.find('рок')+1)

#
s = [[i, input().lower().find("рок")] for i in range(int(input()))]
[print(i[0]+1, i[1]+1) for i in s if i[1] != -1]

#
word = "рок"
for i in range(1,int(input())+1):
    inp = input().lower()
    if word in inp:
        print(i, inp.index(word)+1)

#
for i in range(1, int(input()) + 1):
    w = input().lower()
    if 'рок' in w:
        print(i, w.find('рок') + 1)

# Напишите программу, которая найдет сумму кубов натуральных чисел от 50 до 100 включительно
# 503 + 513 + 523 + 533 + ... + 1003
s = 0
for i in range(50,101):
    s += i**3
print(s)

#
s = 0
for i in range(50,101):
    s = i**3 + s
    print(s)

#
a = 0
b = a
for i in range(50, 101):
    a = i**3
    b += a
print(b)

# Кратные 3 или 5
# Если перечислить все натуральные числа ниже 10, которые кратны 3 или 5, то получим 3, 5, 6 и 9. Сумма этих чисел 23.
# Напишите программу, которая принимает натуральное число n и находит сумму всех чисел ниже переданного числа n,
# которые делятся на 3 или на 5.
n = int(input())
b = 0
for i in range(1, n):
    if i%3 == 0 or i%5 == 0:
        b += i
print(b)

#
print(sum(i for i in range(int(input())) if not i % 3 or not i % 5))

#
#summ = 0
#for i in range(1, int(input())):
#    summ += i if not i % 3 or not i % 5 else 0
#print(summ)

print(sum(i if not i % 3 or not i % 5 else 0 for i in range(1, int(input()))))

# Мишка — маленький белый медвежонок. А как известно, маленькие медвежата в свободное время любят играть в кости на
# шоколадки. Одним замечательным солнечным утром, гуляя по льдинам, Мишка встретила своего друга Криса, которому и
# предложила сыграть в эту занимательную игру.
# Правила её очень просты: сначала определяется значение n — количество раундов игры. В очередном раунде каждый из
# игроков один раз бросает стандартный игральный кубик, на грани которого нанесены различные числа от 1 до 6. Игрок,
# выбросивший большее значение, становится победителем в раунде. В случае, если выпавшие значения равны, победа не
# засчитывается никому.
# В самой же игре побеждает участник, выигравший в большем количестве раундов. Если же количества побед, заслуженных
# игроками, равны, то объявляется ничья.Мишка ещё совсем маленькая и плохо умеет вести счёт, а потому попросила Вас
# понаблюдать за ходом игры и сообщить ей результат. Помогите ей!
# Входные данные:
# В первой строке входных данных содержится число n (1≤n≤100) — количество раундов игры.
# Следующие n строк содержат описание раундов. В i-й из них содержится пара целых чисел mi и ci (1≤mi,ci≤6) — результаты
# бросков Мишки и Криса в i-ом раунде соответственно.
# Выходные данные:
# В случае победы Мишки в единственной строке выведите "Mishka" (без кавычек), а в случае победы Криса выведите "Chris"
# (без кавычек). Если же игра сведётся к ничьей, то выведите "Friendship is magic!^^" (без кавычек).
n = int(input())
m, c = 0, 0

for i in range(n):
    a, b = map(int, input().split())
    m += a
    c += b
if m == c:
    print('Friendship is magic!^^')
elif m > c:
    print('Mishka')
else:
    print('Chris')

#
n = int(input())

x = y = 0
for _ in range(n):
    a, b = input().split()
    x += int(a > b)
    y += int(a < b)

print('Mishka' if x > y else 'Chris' if x < y else 'Friendship is magic!^^')

#
m = k = 0
for _ in range(int(input())):
    s = list(map(int, input().split()))
    if s[0] > s[1]:
        m += 1
    elif s[1] > s[0]:
        k += 1
print('Mishka' if m > k else 'Chris' if k > m else 'Friendship is magic!^^')

#
n = int(input())
Mishka = Chris = 0

for _ in range(0, n):
    a, b = map(int, input().split())
    Mishka += (a > b)
    Chris += (a < b)

print([['Mishka', 'Chris'][Mishka < Chris],'Friendship is magic!^^'][Mishka == Chris])

# Предположим, вы переписываете у друга рецепты в блокнотик, но вам не нравится "соль". Переписывайте без него.
# Формат ввода:
# На первой строке вводится натуральное число N — количество пунктов рецепта.
# Далее следуют N строк — пункты рецепта.
# Формат вывода:
# Одна строка — пункты рецепта, разделённые запятой и пробелом, без пунктов с упоминанием слова "соль"
# (то есть таких, в которых нет подстроки "соль" в нижнем регистре).
n = int(input())
a = []
for i in range(n):
    s = input()
    if 'соль' not in s:
        a.append(s)
print(', '.join(a))

#
s = [input() for i in range(int(input()))]
print(*[i for i in s if not 'соль' in i], sep=', ')

#

print(*(s for s in (input() for _ in range(int(input()))) if not s.count('соль')), sep=', ')

#
n = int(input())
b = []
for i in range(n):
    a = input().lower()
    if 'соль' in a:
        del(a)
    else:
        b.append(a)
print(*b, sep = ', ')

# Слишком длинные слова
# Иногда некоторые слова вроде «civilization» или «internationalization» настолько длинны, что их весьма утомительно
# писать много раз в каком либо тексте.Будем считать слово слишком длинным, если его длина строго больше 10 символов.
# Все слишком длинные слова можно заменить специальной аббревиатурой.Эта аббревиатура строится следующим образом:
# записывается первая и последняя буква слова, а между ними — количество букв между первой и последней буквой
# (в десятичной системе счисления и без ведущих нулей).Таком образом, «civilization» запишется как «c10n», а
# «internationalization» как «i18n».
# Вам предлагается автоматизировать процесс замены слов на аббревиатуры. При этом все слишком длинные слова должны быть
# заменены аббревиатурой, а слова, не являющиеся слишком длинными, должны остаться без изменений.
# Входные данные:
# В первой строке содержится целое число n (1≤n≤100). В каждой из последующих n строк содержится по одному слову.
# Все слова состоят из малых латинских букв и имеют длину от 1 до 100 символов.
# Выходные данные:
# Выведите n строк. В i строке должен находиться результат замены i-го слова из входных данных.
for i in range(int(input())):
    i = input()
    if len(i) > 10:
        print(i[0], len(i[1:-1]), i[-1], sep='')
    else:
        print(i)

#
for _ in range(int(input())):
    word = input()
    if len(word) > 10:
        word = word[0] + str(len(word) - 2) + word[-1]
    print(word)

#
[print(f'{i[0]}{len(i)-2}{i[-1]}') if len(i)>10 else print(i) for i in [input() for j in range(int(input()))]]

#
for _ in range(int(input())):
    n = input()
    print(n[0] + str(len(n) - 2) + n[-1] if len(n) > 10 else n)

#
d = [input() for i in range(int(input()))]

print(*[f'{w[0]}{len(w) - 2}{w[-1]}' if len(w) > 10 else w for w in d], sep='\n')

#
''' Слишком длинные слова '''
print("\n".join((w, f'{w[0]}{len(w) - 2}{w[-1]}')[len(w) > 10] for w in [input() for _ in range(int(input()))]))

