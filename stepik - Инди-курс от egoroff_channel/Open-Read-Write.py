# Файловый ввод-вывод.

# [STEPIK]
# Программирование на Python https://stepik.org/67
# 03_04_02 Файловый ввод/вывод

# Напишите программу, которая считывает из файла строку, соответствующую тексту, сжатому с помощью кодирования повторов,
# и производит обратную операцию, получая исходный текст.

with open('dataset_3363_2.txt', 'r') as f:
    s = f.readline().strip()


for i in range(len(s)):
    r = 1
    number=''
    if s[i].isalpha():
        while s[i+r].isdigit():
            number += str(s[i + r])
            r+=1
        for _ in range(int(number)):
            print(s[i],end='')
'''
# Тут всё достаточно прозрачно. Работа идёт с инкрементированием (к слову, инкремент - хороший костыль во многих случаях, 
# рекомендую!).
#1. Перебираем каждый символ строки, с каждым новым перебором задаём тот самый инкремент r и пустую строку number (где r 
отвечает за проход от текущего элемента в итерации (элемента s[i] ) ровно на 1 элемент вперед, а number - за число, на 
которое нужно умножить нашу букву)
#2. Работая ищейкой, r посимвольно вынюхивает, являются ли элементы за s[i] (которое у нас буква) digit-ами. Если так, 
то в number записывается число после s[i] до тех пор, пока элемент s[i+r] станет НЕdigit (в нашем случае - alpha).
#3. Цикл while заканчивает свою работу, вступает цикл for, который записывает s[i]-ую букву ровно number раз.
#4. Самый первый цикл for идёт дальше по элементам нашей строки и применяет вышеназванные пункты только к ALPHA-элементам 
( if s[i].isalpha() ), в ином случае, итерация цикла переходит к следующему символу строки s
'''

# [STEPIK]
# Программирование на Python https://stepik.org/67
# 03_04_03 Файловый ввод/вывод

'''
# Недавно мы считали для каждого слова количество его вхождений в строку. Но на все слова может быть не так интересно 
смотреть, как, например, на наиболее часто используемые.
# Напишите программу, которая считывает текст из файла (в файле может быть больше одной строки) и выводит самое частое 
слово в этом тексте и через пробел то, сколько раз оно встретилось. Если таких слов несколько, вывести лексикографически 
первое (можно использовать оператор < для строк).
# Слова, написанные в разных регистрах, считаются одинаковыми.
# Sample Input:
# abc a bCd bC AbC BC BCD bcd ABC
# Sample Output:
# abc 3
'''

dictionary = {}

with open('03_04_03_input.txt') as in_f_obj:
    for line in in_f_obj:
        line = line.lower()
        for word in line.split():
            if word not in dictionary:
                dictionary[word] = 1
            elif word in dictionary:
                dictionary[word] += 1

max_quantity = 1

for key, value in dictionary.items():
    current_quantity = dictionary[key]
    if current_quantity > max_quantity:
        max_quantity = current_quantity
        word_with_max_quantity = key

with open('03_04_03_output.txt', 'w') as out_f_obj:
    most_popular = (word_with_max_quantity + ' ' + str(max_quantity))
    out_f_obj.write(most_popular)